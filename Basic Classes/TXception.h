#ifndef __TXCEPTION_H#define __TXCEPTION_H#include <exception.h>#include <iostream.h>// base exception class class TXception : public exception{	public:		TXception (void);		TXception (const char*);		virtual ~TXception (void);				friend ostream& 			operator << (ostream& o, const TXception& except) { return (except.Write (o)); };	    virtual const char* 		what (void) const { return (fStr ? fStr : "TXception"); }; 		virtual ostream&			Write (ostream& o) const { return (o << what ()); }; 		 	protected: 		char*						fStr;};#endif // __TXCEPTION_H
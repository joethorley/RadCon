#include "TWeight.h"int TWeight::Compare (const TSortable& sortable) const{	CHECK (Class () == sortable.Class ());	const TWeight& weight = (const TWeight&)sortable;	if (fWeightValue != weight.fWeightValue)	{		if (fWeightValue < weight.fWeightValue)			return (-1);		return (1);	}	return (0);}TWeight& TWeight::operator = (const TWeight& weight) {	fWeightValue = weight.fWeightValue;	return (*this);}TWeight& TWeight::operator = (const double weight){	CHECK_ (weight <= kMaxWeight);	fWeightValue = weight;	return (*this);}TWeight& TWeight::operator += (const TWeight& weight){	CHECK (fWeightValue < fWeightValue + weight.fWeightValue);	fWeightValue += weight.fWeightValue;	return (*this);}TWeight& TWeight::operator += (const double weight){	CHECK (fWeightValue < fWeightValue + weight);	fWeightValue += weight;	return (*this);}TWeight& TWeight::operator -= (const TWeight& weight){	CHECK (fWeightValue > fWeightValue - weight.fWeightValue);	fWeightValue -= weight.fWeightValue;	return (*this);}TWeight& TWeight::operator -= (const double weight){	CHECK (fWeightValue > fWeightValue - weight);	fWeightValue -= weight;	return (*this);}
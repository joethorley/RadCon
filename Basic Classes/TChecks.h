#ifndef __TCHECKS_H#define __TCHECKS_H#include "TXception.h"#include <stdio.h>#ifndef __DOCHECKS#define __DOCHECKS 1#endif // __DOCHECKS// use #if CONDCOMP_ and #if CONDCOMP to switch particular conditional compilation on and off, respectively (when __DOCHECKS == 1)// to switch them all on or off set DEBUG to equal 2 or 0, respectively// __DOCHECKS == 0 - neither// __DOCHECKS == 1 - CONDCOMP_ // __DOCHECKS == 2-  CONDCOMP_ and CONDCOMP#undef CONDCOMP_#if __DOCHECKS < 1	#define CONDCOMP_ 0#else // __DOCHECKS >= 1	#define CONDCOMP_ 1#endif // __DOCHECKS < 1#undef CONDCOMP#if __DOCHECKS < 2	#define CONDCOMP 0#else // __DOCHECKS >= 2	#define CONDCOMP 1#endif // __DOCHECKS < 2// use CHECK_ and CHECK to switch particular CHECKS on and off, respectively (when __DOCHECKS == 1)// to switch them all on or off set DEBUG to equal 2 or 0, respectively// __DOCHECKS == 0 - neither// __DOCHECKS == 1 - CHECK_ // __DOCHECKS == 2-  CHECK_ and CHECK#if CONDCOMP_	class ECheck : public TXception	{		public:			ECheck (void) : TXception () { };			ECheck (const char* str) : TXception (str) { };			 	};#endif // CONDCOMP#undef CHECK_#if CONDCOMP_	#define CHECK_(p)   if (p) ((void)0);\		else {char* s = new char[BUFSIZ];\		sprintf(s, "Check failed!%c%c[%s]%c%cfile: %s%cline: %d",EOLN,EOLN,#p,EOLN,EOLN, __FILE__, EOLN, __LINE__);\		throw ECheck(s);}#else // CONDCOMP_ == 0	#define CHECK_(p)   ((void)0)#endif // CONDCOMP_#undef CHECK#if CONDCOMP	#define CHECK(p)   if (p) ((void)0);\		else {char* s = new char[BUFSIZ];\		sprintf(s, "Check failed!%c%c[%s]%c%cfile: %s%cline: %d",EOLN,EOLN,#p,EOLN,EOLN, __FILE__, EOLN, __LINE__);\		throw ECheck(s);}#else // CONDCOMP == 0	#define CHECK(p)    ((void)0)#endif // CONDCOMP_#endif // _TCHECKS_H
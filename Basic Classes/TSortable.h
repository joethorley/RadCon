#ifndef _TSORTABLE_H#define _TSORTABLE_H#include "TObject.h"class TSortable : public TObject{	public:		virtual ClassType			Class (void) const { return (kTSortableClass); };				// if *this is less than arg (*this < arg) then this->Compare (arg) should be less than 0 (return -1)		// if greater then return 1 and if equal return 0		virtual int					Compare (const TSortable& sortable) const = 0;    	bool		 				IsSortable (void) const { return (true); };	    virtual int					operator <= (const TSortable& sortable) const { return (Compare (sortable) <= 0); };	    virtual int	 				operator >= (const TSortable& sortable) const { return (Compare (sortable) >= 0); };	    virtual int					operator <  (const TSortable& sortable) const { return (Compare (sortable) < 0); };	    virtual int	 				operator >  (const TSortable& sortable) const { return (Compare (sortable) > 0); };};#endif // _TSORTABLE_H
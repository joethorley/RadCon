#ifndef __TREADFILE_H#define __TREADFILE_H#include <iostream.h>#include <ctype.h>#include <iosfwd.h>#include "TChecks.h"#include "TClassTypes.h"#include "TString.h"#include "TFlags.h"#if PRAGMA_MARK_SUPPORTED#pragma mark -#pragma mark ___ class TReadFile ___#endifclass TReadFile : protected TFlags{	enum	{		kEOF = 0x0001		};		public:					TReadFile (istream& i, TString fileName = "");		virtual ~TReadFile (void);						virtual const TString&								GetCurWord (void) const { return (fCurWord); };		virtual const TString&								GetNextWord (void);		virtual char										GetCurChar (void) const { return (fCurChar); };		virtual char										GetNextChar (void);		virtual const TString&								GetFileName (void) const { return (fFileName); };					virtual void										SetToStart (void);		virtual bool										SetToWord (const TString& word);		virtual bool										SetToChar (const char character);				virtual bool										IsWhiteSpace (const char ch) const { return (fWhiteSpace.FindCharacter (ch)); };		virtual bool										IsEOF (void) const { return (IsFlag (kEOF)); };						virtual void										SetWhiteSpace (const TString string = " \n\t\r") { fWhiteSpace = string; };			protected:					istream&											fIStream;		streampos     										fStreamPos;		TString												fFileName;		TString												fCurWord;		TString												fWhiteSpace;				char												fCurChar;};#if PRAGMA_MARK_SUPPORTED#pragma mark -#endif#endif	// __TREADFILE_H
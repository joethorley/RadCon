#ifndef __NEXUS_H#define __NEXUS_H#include "TString.h"#include "TFlags.h"#include "TClassTypes.h"class Nexus{	public:		static bool					IsPunctuationCharacter (const char ch) { return (fPunctuationCharacters.FindCharacter (ch)); };		static bool					IsWhiteSpaceCharacter (const char ch) { return (fWhiteSpaceCharacters.FindCharacter (ch)); };		static bool					IsPunctuationAndWhiteSpaceCharacter (const char ch) { return (fPunctuationAndWhiteSpaceCharacters.FindCharacter (ch)); };		static bool					IsPunctuationCharacters (const TString& set) { return (set.IsFindCharacters (fPunctuationCharacters)); };		static bool					IsWhiteSpaceCharacters (const TString& set) { return (set.IsFindCharacters (fWhiteSpaceCharacters)); };		static bool					IsPunctuationAndWhiteSpaceCharacters (const TString& set) { return (set.IsFindCharacters (fPunctuationAndWhiteSpaceCharacters)); };						static const TString&		GetPunctuationCharacters (void) { return (fPunctuationCharacters); };		static const TString&		GetWhiteSpaceCharacters (void) { return (fWhiteSpaceCharacters); };		static const TString&		GetPunctuationAndWhiteSpaceCharacters (void) { return (fPunctuationAndWhiteSpaceCharacters); };	protected:		static const TString		fPunctuationCharacters;		static const TString		fWhiteSpaceCharacters;		static const TString		fPunctuationAndWhiteSpaceCharacters;};#endif // __NEXUS_H
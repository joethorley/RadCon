// Functions which read in Nexus tokens taken from NEXUS home page// Copyright © 1997, David R. Maddison, David L. Swofford, and Wayne P. Maddison //	C++ Translation//	Copyright (c) 1998, Joseph L. Thorley. All rights reserved.#ifndef __READNEXUSTOKEN_H#define __READNEXUSTOKEN_H#include "TString.h"#include "TFlags.h"#include "TClassTypes.h"#include "Nexus.h"class TReadNexusToken : protected TFlags{	protected :				enum 		{			kReadOutputComments 	= 0x0001,			kReadCommandComments 	= 0x0002		};				class EReadChar : public TXception 		{			public:				EReadChar () : TXception () { };	    		EReadChar (const char* str) : TXception (str) { };			 		}; 				TReadNexusToken (void);		bool						isReadOutputComments (void) const { return (IsFlag (kReadOutputComments)); };		bool						isReadCommandComments (void) const { return (IsFlag (kReadCommandComments)); };				TString& 					nextToken (void);				virtual void 				nextFileCharacter (void) = 0;				char 						nonCommentFileCharacter (void);				virtual char				peekNextFileCharacter (void) = 0;				void						setReadCommandComments (const bool read = true) { SetFlag (kReadCommandComments, read); }; 				void						setReadOutputComments (const bool read = true) { SetFlag (kReadOutputComments, read); }; 				void 						skipBlock (void);				void 						skipComment (void);		void						skipToSemicolon (void);		char						fCurFileChar;		TString						fCurToken;};#endif // __READNEXUSTOKEN_H
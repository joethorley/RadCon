#ifndef __TPARTITION_H#define __TPARTITION_H#include "TClassTypes.h"#include "TLeafSet.h"#include "TArray.h"#if PRAGMA_MARK_SUPPORTED#pragma mark -#pragma mark ___ class TPartition ___#endif// this class uses space efficient but time inefficient algorithm// the maximum number of leaves it can handle is MAX_UINT = 65353U// KMaxLeaves = 500U and the minimum number of leaves = 3class TPartition{	public:		TPartition (void);		virtual ~TPartition (void) { };				virtual bool						CurPart (void) const { return (IthPart (fCount)); };		virtual bool						CurPart (TLeafSet& leafSet) const { return (IthPart (fCount, leafSet)); };		virtual void 						EnterSet (unsigned short leaves, const TLeafSet& leafSet);		virtual bool 						FirstPart (void) const { return (IthPart (((TPartition*)this)->fCount = 1)); };		virtual bool 						FirstPart (TLeafSet& leafSet) const { return (IthPart (((TPartition*)this)->fCount = 1, leafSet)); };		virtual bool						IthPart (unsigned short i) const { return ((bool)(i && i <= fParts)); };		virtual bool						IthPart (unsigned short i, TLeafSet& leafSet) const;				virtual const TLeafSet&				GetLeafSet (void) const { return (fLeafSet); };		virtual unsigned short				GetLeaves (void) const { return (fLeafSet.GetLeaves ()); };		virtual bool 						NextPart (void) const { return (IthPart (fCount) ? IthPart (((TPartition*)this)->fCount += 1) : false); };		virtual bool 						NextPart (TLeafSet& leafSet) const { return (IthPart (fCount) ? IthPart (((TPartition*)this)->fCount += 1, leafSet) : false); };				virtual unsigned short				Parts (void) const { return (fParts); };		virtual void 						PP (TLeafSet leafSet);		virtual void 						Setup (void);				protected:		TArray<unsigned short>					fArrayA;		TArray<unsigned short>					fArrayB;				TArray<unsigned short>*					fCurRow;		TArray<unsigned short>*					fLastRow;			unsigned short 							fCount;		unsigned short 							fLeaves;		unsigned short 							fParts;		TLeafSet								fLeafSet;};#if PRAGMA_MARK_SUPPORTED#pragma mark -#endif#endif // __TPARTITION_H
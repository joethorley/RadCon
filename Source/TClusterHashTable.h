#ifndef _TCLUSTERHASHTABLE_H#define _TCLUSTERHASHTABLE_H#include "TFlags.h"#include "TCluster.h"#include "TTreeNode.h"#include "TTree.h"#include "THashTable.h"class TClusterHashTableIteratorConst;class TClusterHashTable{	friend class TClusterHashTableIteratorConst;	public:		TClusterHashTable (const TLeafSet& leafSet) : fHashTable (1991), fLeafSet (leafSet) { CHECK_ (2 < leafSet.GetLeaves ()); };		~TClusterHashTable (void) { };				virtual void							AddCluster (const TCluster& cluster);		virtual void							AddCluster (TCluster* cluster);		virtual unsigned int						Clusters (void) const { return (fHashTable.GetItems ()); };		virtual bool							CurCluster (void) const { return (fHashTable.CurItem ()); };		virtual bool							CurCluster (TCluster*& cluster);		virtual bool							CurCluster (const TCluster*& cluster) const;		virtual void							DetachCurCluster (TCluster*& cluster);		virtual bool							FirstCluster (void) const { return (fHashTable.FirstItem ());  };		virtual bool							FirstCluster (TCluster*& cluster);		virtual bool							FirstCluster (const TCluster*& cluster) const;				virtual bool							IsCompatible (const TCluster& cluster) const;	    virtual TClusterHashTableIteratorConst&	IteratorConst (void) const;				virtual unsigned int						GetLeaves (void) const { return (fLeafSet.GetLeaves ()); };		virtual const TLeafSet&					GetLeafSet (void) const { return (fLeafSet); };				virtual bool							NextCluster (void) const { return (fHashTable.NextItem ());  };		virtual bool							NextCluster (TCluster*& cluster);		virtual bool							NextCluster (const TCluster*& cluster) const;				virtual ostream&						Write (ostream& o) const { return (fHashTable.Write (o)); };		virtual ostream&						WriteAsStar (ostream &o, const bool writeWeight = false) const;	protected:		THashTable								fHashTable;		TLeafSet								fLeafSet;};class TClusterHashTableIteratorConst{	public:	    TClusterHashTableIteratorConst (const TClusterHashTable&);	    TClusterHashTableIteratorConst (const TClusterHashTableIteratorConst&);	    	    virtual ~TClusterHashTableIteratorConst (void);		virtual bool							CurCluster (void) const { return (fHashTableIterator.CurItem ()); };		virtual bool							CurCluster (const TCluster*& cluster) const;		virtual bool							FirstCluster (void) { return (fHashTableIterator.FirstItem ()); };		virtual bool							FirstCluster (const TCluster*& cluster);				virtual bool							NextCluster (void) { return (fHashTableIterator.NextItem ()); };		virtual bool							NextCluster (const TCluster*& cluster);			protected:		const TClusterHashTable&				fClusterHashTable;		THashTableIteratorConst&				fHashTableIterator;};inlineTClusterHashTableIteratorConst&	TClusterHashTable::IteratorConst (void) const { 	return (*(new TClusterHashTableIteratorConst (*this))); }#endif // _TCLUSTERHASHTABLE_H
#ifndef __TFUSE_H#define __TFUSE_H#include "TChecks.h"#include "TFlags.h"#include "TSplit.h"#include "TSplitSet.h"#if PRAGMA_MARK_SUPPORTED#pragma mark -#pragma mark ___ class TFuse ___#endifclass TFuse : public TCladistic{	public:				TFuse (const TLeafSet& leafSet, const bool rooted);		TFuse (const TFuse& fuse);		virtual ~TFuse (void);		virtual void								AddSplit (TSplit* split);		virtual void								AddSplit (const TSplit& split) { AddSplit (new TSplit (split)); }; 			virtual ClassType							Class (void) const { return (kTFuseClass); };		virtual TObject*							Clone (void) const { return (new TFuse (*this)); };		virtual void								Copy (const TObject& obj);				virtual void								Fuse (TSplitSet& splitSet);		virtual const TLeafSet&						GetLeafSet (void) const { return (fLeafSet); };		virtual bool 								IsEqual (const TObject& obj) const;				virtual TFuse&								operator = (const TFuse& fuse);			protected:			virtual bool								addSplits (void);		virtual void								storeSplits (TSplitSet& splitSet);		virtual void								fuseSplits (void);			TSplitSet									fInputSplits;		TSplitSet									fFuseSplits;		double										fMaxValue;		unsigned short								fCurValue;		unsigned short								fCurRun;		unsigned short								fCurSplit;				TLeafSet									fLeafSet;};#if PRAGMA_MARK_SUPPORTED#pragma mark -#endif#endif // __TFUSE_H
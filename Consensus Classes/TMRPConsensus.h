#ifndef __TMRPCONSENSUS_H#define __TMRPCONSENSUS_H#include "TSuperTreeConsensus.h"#include "TQuartetSet.h"#include "TSplitSet.h"#define TMRPCONSENSUS_FLAG_COMPONENTS		0x0010#define TMRPCONSENSUS_FLAG_PURVISCODING		0x0020static const unsigned long int kMaxMatrix = 1000000; // 1,000,000#if PRAGMA_MARK_SUPPORTED#pragma mark -#pragma mark ___ class TMRPConsensus ___#endif// this class uses unsigned long long to store the number of charactersclass TMRPConsensus : public TSuperTreeConsensus{	public :		TMRPConsensus (const TSourceTreesFile* sourceTreesFile, const bool component, const bool purvisCoding);		TMRPConsensus (const TMRPConsensus& mrpConsensus);		virtual ~TMRPConsensus (void);						virtual void							Consensus (void);				virtual bool							CalcCharacters (void);				virtual ClassType 						Class (void) const { return (kTMRPConsensusClass); };		virtual TObject* 						Clone (void) const { return (new TMRPConsensus (*this)); };				virtual char*							GetName (void) const { return ("MRP Consensus"); };													virtual void							SetFile (ostream& o, const TString& name);							protected:			virtual void							addTree (void);				virtual void 							splitSetTraverseTree (const TTreeNode* treeNode, const TTree& tree, TSplitSet& splitSet);		virtual void							nextTree (void);		ostream*								fostream;		TString									fName;				ostringstream							fCharSets;		unsigned long 							fCharactersDone;		unsigned long long						fSourceCharacters;				TQuartetSet*							fQuartetSet;		TDistanceMatrix*						fDistanceMatrix;};#if PRAGMA_MARK_SUPPORTED#pragma mark -#endif#endif // __TMRPCONSENSUS_H 
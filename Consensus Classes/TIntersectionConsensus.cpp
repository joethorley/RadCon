#include "TIntersectionConsensus.h"TIntersectionConsensus::TIntersectionConsensus (const TSourceTreesFile* sourceTreesFile) 	: TConsensusTreesFile (*sourceTreesFile){	fSourceLeafSet = fSourceTreesBlock->GetLeafSet (true, true);		CHECK_ ((3 < fSourceLeafSet.GetLeaves ()) || (IsRooted () && fSourceLeafSet.GetLeaves () == 3));		fConsensusLeafSet.SetFull (fSourceLeafSet.GetLeaves ());	fToPrune = fSourceTreesBlock->GetLeafSet (false, true) - fSourceLeafSet;		fLeafMap.SetMapping (fSourceLeafSet, fConsensusLeafSet);		fTaxaBlock->PruneLeaves (fTaxaBlock->GetLeafSet () - fSourceLeafSet);	if (fLeafMap.IsMapping ())			fTaxaBlock->MapLeaves (fLeafMap);	fConsensusTree.StarTree (fConsensusLeafSet);}void TIntersectionConsensus::nextTree (void){	fSourceTreesBlock->GetIthTree (fTreesDone + 1, fCurSourceTree, true);		CHECK_ (fCurSourceTree.GetWeight ());	if (!fToPrune.IsEmpty ())	{		TLeafSet leafSet (fToPrune * fCurSourceTree.GetLeafSet ());		if (!leafSet.IsEmpty ())			fCurSourceTree.PruneLeaves (leafSet);	}	if (fLeafMap.IsMapping ())			fCurSourceTree.MapLeaves (fLeafMap);		CHECK_ (fCurSourceTree.GetLeafSet () == fConsensusLeafSet);}
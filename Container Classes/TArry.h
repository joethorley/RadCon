#ifndef _TARRY_H#define _TARRY_H#include "TArryContainer.h"#include "TVArray.h"class TArryIterator;class TArryIteratorConst;class TArry : public TArryContainer {	friend class TArryIterator;	friend class TArryIteratorConst;	public:		TArry (const unsigned int sz = 20, const unsigned int delta = 20) : fVArray (sz, delta) { };		TArry (const TArry& arry) : fVArray (arry.fVArray) { };		virtual ~TArry (void) { };		virtual void							AddItem (const TObject& item) { AddItem (item.Clone ()); };		virtual void							AddItem (TObject*);		virtual ClassType						Class (void) const { return ((ClassType) kTArryClass); };		virtual TObject*						Clone (void) const { return (new TArry (*this)); };		virtual void							Copy (const TObject&); 		virtual void							DeleteCurItem (void) { DeleteIthItem (fCurItem); };		virtual void							DeleteIthItem (const unsigned int i);	 		virtual void							DetachCurItem (TObject*& item) { DetachIthItem (fCurItem, item); }; 		virtual void							DetachItem (TObject*& item) { DetachIthItem (GetItems (), item); }; 		virtual void							DetachIthItem (const unsigned int, TObject*&);	    virtual TContainerIterator& 			Iterator (void);		virtual TContainerIteratorConst&		IteratorConst (void) const;		virtual bool							IthItem (const unsigned int i) const { return ((bool)(0 < i && i <= GetItems ())); };		virtual bool							IthItem (const unsigned int, TObject*&);		virtual bool							IthItem (const unsigned int, const TObject*&) const;		virtual TObject&						IthItemRef (const unsigned int i) { CHECK (i <= GetItems ()); return (*fVArray[i-1]); };				virtual const TObject&					IthItemRef (const unsigned int i) const { CHECK (i <= GetItems ()); return (*fVArray[i-1]); };        virtual TArry&							operator = (const TArry& arry);		protected:		TVArray<TObject*>						fVArray;};class TArryIterator : public TArryContainerIterator{	friend class TArryIteratorConst;	public:	  		TArryIterator (TArry& arry) : TArryContainerIterator (arry), fArry (arry) { };		TArryIterator (const TArryIterator& arryIterator) : TArryContainerIterator (arryIterator), fArry (arryIterator.fArry) { };		~TArryIterator (void) { };				virtual bool							IthItem (const unsigned int i) const { return (fArry.IthItem (i)); };		virtual bool							IthItem (const unsigned int i, TObject*& item) const { return (fArry.IthItem (i, item)); };		virtual TObject&						IthItemRef (const unsigned int i) const { return (fArry.IthItemRef (i)); };		virtual bool							LastItem (void) { return (IthItem (fCurItem = fArry.GetItems ())); };		virtual bool							LastItem (TObject*& item) { return (IthItem (fCurItem = fArry.GetItems (), item)); };	protected:		TArry&								fArry;};class TArryIteratorConst : public TArryContainerIteratorConst{	public:	  		TArryIteratorConst (const TArry& arry) : TArryContainerIteratorConst (arry), fArry (arry) { };		TArryIteratorConst (const TArryIterator& arryIterator) : TArryContainerIteratorConst (arryIterator), fArry (arryIterator.fArry) { };		TArryIteratorConst (const TArryIteratorConst& arryIteratorConst) : TArryContainerIteratorConst (arryIteratorConst), fArry (arryIteratorConst.fArry) { };		~TArryIteratorConst (void) { };		virtual bool							IthItem (const unsigned int i) const { return (fArry.IthItem (i)); };		virtual bool							IthItem (const unsigned int i, const TObject*& item) const { return (fArry.IthItem (i, item)); };		virtual const TObject&					IthItemRef (const unsigned int i) const { return (fArry.IthItemRef (i)); };		virtual bool							LastItem (void) { return (IthItem (fCurItem = fArry.GetItems ())); };		virtual bool							LastItem (const TObject*& item) { return (IthItem (fCurItem = fArry.GetItems (), item)); };	protected:		const TArry&							fArry;};inlineTContainerIterator& TArry::Iterator (void) { 	return *((TContainerIterator*)(new TArryIterator (*this))); }inlineTContainerIteratorConst& TArry::IteratorConst (void) const { 	return *((TContainerIteratorConst*)(new TArryIteratorConst (*this))); }#endif // _TARRY_H